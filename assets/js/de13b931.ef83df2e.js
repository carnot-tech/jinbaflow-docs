"use strict";(self.webpackChunkjinbaflow_docs=self.webpackChunkjinbaflow_docs||[]).push([[4965],{5637:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>l,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var o=n(4848),s=n(8453);const r={},c="Prompt",i={id:"module-types/prompt",title:"Prompt",description:"Sends a prompt to an AI and returns its response.",source:"@site/docs/module-types/prompt.md",sourceDirName:"module-types",slug:"/module-types/prompt",permalink:"/jinbaflow-docs/docs/module-types/prompt",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Fetch",permalink:"/jinbaflow-docs/docs/module-types/fetch"},next:{title:"Python",permalink:"/jinbaflow-docs/docs/module-types/python"}},p={},d=[{value:"Inputs",id:"inputs",level:2},{value:"Outputs",id:"outputs",level:2}];function u(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"prompt",children:"Prompt"}),"\n",(0,o.jsx)(t.p,{children:"Sends a prompt to an AI and returns its response."}),"\n",(0,o.jsx)(t.h2,{id:"inputs",children:"Inputs"}),"\n",(0,o.jsxs)(t.p,{children:["You can define your own variables to use in the code with ",(0,o.jsx)(t.code,{children:"context.{var_name}"})," as your inputs."]}),"\n",(0,o.jsx)(t.h2,{id:"outputs",children:"Outputs"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"result"}),": ",(0,o.jsx)(t.code,{children:"[String]"})," The response from the AI."]})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>i});var o=n(6540);const s={},r=o.createContext(s);function c(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);